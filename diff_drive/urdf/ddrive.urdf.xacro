<robot name="ddrive" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <xacro:property name="ddrive_yaml" value="$(find diff_drive)/config/ddrive.yaml"/>
    <xacro:property name="yaml_dict" value="${xacro.load_yaml(ddrive_yaml)['/**']['ros__parameters']}"/>
    <xacro:property name="base_length" value="${yaml_dict['base_length']}"/>
    <xacro:property name="base_width" value="${yaml_dict['base_width']}"/>
    <xacro:property name="base_height" value="${yaml_dict['base_height']}"/>
    <xacro:property name="wheel_radius" value="${yaml_dict['wheel_radius']}"/>
    <xacro:property name="wheel_thickness" value="${yaml_dict['wheel_thickness']}"/>
    <xacro:property name="caster_radius" value="${yaml_dict['caster_radius']}"/>
    <xacro:property name="center_to_wheel" value="${yaml_dict['center_to_wheel']}"/>
    <xacro:property name="base_mass" value=".05"/>
    <xacro:property name="wheel_mass" value="5"/>
    <xacro:property name="caster_mass" value="0.001"/>
    <xacro:property name="base_ixx" value="${base_mass*(base_width**2 + base_height**2)/12}"/>
    <xacro:property name="base_iyy" value="${base_mass*(base_length**2 + base_height**2)/12}"/>
    <xacro:property name="base_izz" value="${base_mass*(base_width**2 + base_length**2)/12}"/>
    <xacro:property name="wheel_ixx" value="${wheel_mass*(3*(wheel_radius**2) + wheel_thickness**2)/12}"/>
    <xacro:property name="wheel_izz" value="${wheel_mass*(wheel_radius**2)/2}"/>
    <xacro:property name="caster_ixx" value="${caster_mass*2*(caster_radius**2)/5}"/>

    <material name="blue">
        <color rgba="0 0 0.8 1"/>
    </material>

    <material name="red">
        <color rgba="0.8 0 0 1"/>
    </material>

    <material name="white">
        <color rgba="1 1 1 1"/>
    </material>

    <material name="green">
        <color rgba="0 0.8 0 1"/>
    </material>

    <link name="base_link">
        <visual>
            <geometry>
                <box size="${base_length} ${base_width} ${base_height}"/>
            </geometry>
            <material name="white"/>
        </visual>
        <collision>
            <geometry>
                <box size="${base_length} ${base_width} ${base_height}"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="1" />
            <inertia
                ixx="${base_ixx}"
                ixy="0"
                ixz="0"
                iyy="${base_iyy}"
                iyz="0"
                izz="${base_izz}"
            />
        </inertial>
    </link>

    <link name="left_wheel">
        <visual>
            <geometry>
                <cylinder length="${wheel_thickness}" radius="${wheel_radius}"/>
            </geometry>
            <material name="green"/>
        </visual>
        <collision>
            <geometry>
                <cylinder length="${wheel_thickness}" radius="${wheel_radius}"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="1"/>
            <inertia
                ixx="${wheel_ixx}"
                ixy="0"
                ixz="0"
                iyy="${wheel_ixx}"
                iyz="0"
                izz="${wheel_izz}"
            />
        </inertial>
    </link>

    <link name="right_wheel">
        <visual>
            <geometry>
                <cylinder length="${wheel_thickness}" radius="${wheel_radius}"/>
            </geometry>
            <material name="green"/>
        </visual>
        <collision>
            <geometry>
                <cylinder length="${wheel_thickness}" radius="${wheel_radius}"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="1"/>
            <inertia
                ixx="${wheel_ixx}"
                ixy="0"
                ixz="0"
                iyy="${wheel_ixx}"
                iyz="0"
                izz="${wheel_izz}"
            />
        </inertial>
    </link>

    <link name="bottom_caster">
        <visual>
            <geometry>
                <sphere radius="${caster_radius}"/>
            </geometry>
            <material name="red"/>
        </visual>
        <collision>
            <geometry>
                <sphere radius="${caster_radius}"/>
            </geometry>
            <contact_coefficients mu="0.0"/>
        </collision>
        <inertial>
            <mass value="1"/>
            <inertia
                ixx="${caster_ixx}"
                ixy="0"
                ixz="0"
                iyy="${caster_ixx}"
                iyz="0"
                izz="${caster_ixx}"
            />
        </inertial>
    </link>

    <link name="top_caster">
        <visual>
            <geometry>
                <sphere radius="${caster_radius}"/>
            </geometry>
            <material name="blue"/>
        </visual>
        <collision>
            <geometry>
                <sphere radius="${caster_radius}"/>
            </geometry>
            <contact_coefficients mu="0.0"/>
        </collision>
        <inertial>
            <mass value="1"/>
            <inertia
                ixx="${caster_ixx}"
                ixy="0"
                ixz="0"
                iyy="${caster_ixx}"
                iyz="0"
                izz="${caster_ixx}"
            />
        </inertial>
    </link>

    <joint name="base_to_left_wheel" type="continuous">
        <parent link="base_link"/>
        <child link="left_wheel"/>
        <origin rpy="${-pi/2} 0 0" xyz="${center_to_wheel} ${.5*(base_width + wheel_thickness)} 0"/>
        <axis xyz= "0 0 1"/>
    </joint>

    <joint name="base_to_right_wheel" type="continuous">
        <parent link="base_link"/>
        <child link="right_wheel"/>
        <origin rpy="${-pi/2} 0 0" xyz="${center_to_wheel} ${-.5*(base_width + wheel_thickness)} 0"/>
        <axis xyz= "0 0 1"/>
    </joint>

    <joint name="base_to_bottom_caster" type="fixed">
        <parent link="base_link"/>
        <child link="bottom_caster"/>
        <origin xyz="${-center_to_wheel} 0 ${-(base_height/2 + caster_radius)}"/>
        <axis xyz= "0 0 1"/>
    </joint>

    <joint name="base_to_top_caster" type="fixed">
        <parent link="base_link"/>
        <child link="top_caster"/>
        <origin xyz="${-center_to_wheel} 0 ${base_height/2 + caster_radius}"/>
        <axis xyz= "0 0 1"/>
    </joint>

    <xacro:include filename="$(find diff_drive)/urdf/ddrive.gazebo.xacro" />

</robot>